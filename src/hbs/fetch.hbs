<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Fetch files</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://kit.fontawesome.com/367d653071.js" crossorigin="anonymous"></script>
    <style>
        body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}

.container {
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #333;
    text-align: center;
    margin-bottom: 20px;
}

ul {
    list-style-type: none;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    grid-gap: 20px;
}

li {
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 4px;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    transition: background-color 0.3s;
}

li:hover {
    background-color: #f9f9f9;
}

form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

input[type="file"] {
    margin: 10px 0;
}

input[type="submit"] {
    padding: 10px 20px;
    background-color: #4caf50;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
}

input[type="submit"]:hover {
    background-color: #45a049;
}
    </style>
</head>
<body>
<h1>Lista Plików</h1>

<ul>
    {{#each files}}
        <li onclick="viewFile('{{this}}')">{{this}}</li>
    {{/each}}
</ul>

<script>
    // Funkcja do przeniesienia się do strony z widokiem pojedynczego pliku
    function viewFile(fileName) {
        window.location.href = `/file/${fileName}`;
    }

    function getFileExt(fileName){
        return fileName.split(".").pop().toLowerCase();
    }

    function downloadFile(fileName){
        fetch("/download/" + fileName).then(response => response.blob()).then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            a.href = url;
            a.download = fileName;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }).catch(error => console.error(error));
    }

    function getIconFileFromExt(fileName){
        const fileExt = getFileExt(fileName);
        switch(fileExt){
            case 'jpg':
            case 'jpeg':
            case 'png':
            case 'gif':
                return `<i class="fa-solid fa-images" onclick="downloadFile('${fileName}')"></i>`;
            case 'txt':
                return `<i class="fa-solid fa-file-lines" onclick="downloadFile('${fileName}')"></i>`;
            case 'zip':
                return `<i class="fa-solid fa-file-zipper" onclick="downloadFile('${fileName}')"></i>`;
            case 'mp4':
            case 'mov':
                return `<i class="fa-solid fa-file-video" onclick="downloadFile('${fileName}')"></i>`;
            case 'js':
            case 'jsc':
                return `<i class="fa-brands fa-js" onclick="downloadFile('${fileName}')"></i>`;
            case 'cs':
            case 'js':
            case 'java':
            case 'py':
            case 'c':
            case 'cpp':
            case 'php':
            case 'html':
            case 'css':
            case 'ruby':
            case 'swift':
            case 'go':
            case 'kotlin':
            case 'ts':
            case 'scala':
            case 'rust':
            case 'shell':
            case 'bat':
            case 'sql':
            case 'r':
            case 'perl':
            case 'dart':
            case 'lua':
            case 'vb':
            case 'cobol':
            case 'fortran':
            case 'scheme':
            case 'prolog':
            case 'jsx':
            case 'tsx':
            case 'vue':
            case 'svelte':
            case 'scss':
            case 'sass':
            case 'less':
            case 'coffee':
            case 'asm':
            case 'json':
            case 'xml':
            case 'yaml':
            case 'toml':
            case 'ini':
            case 'bat':
            case 'sh':
            case 'md':
            case 'txt':
                return `<i class="fa-solid fa-code" onclick="downloadFile('${fileName}')"></i>`;
            case 'docx':
            case 'doc':
                return `<i class="fa-solid fa-file-word" onclick="downloadFile('${fileName}')"></i>`;
            case 'pdf':
                return `<i class="fa-solid fa-file-pdf" onclick="downloadFile('${fileName}')"></i>`;
            default: 
                return `<i class="fa-solid fa-question" onclick="downloadFile('${fileName}')"></i>`;
        }
    }

    // Pobranie listy plików
    fetch('/files')
            .then(response => response.json())
            .then(data => {
                const fileList = document.querySelector('ul');

                // Generowanie listy plików
                data.files.forEach(fileName => {
                    const listItem = document.createElement('li');

                    const icon = getIconFileFromExt(fileName);
                    listItem.innerHTML = `${icon} | ${fileName}`;
                    listItem.addEventListener('click', () => viewFile(fileName));
                    fileList.appendChild(listItem);
                });
            })
            .catch(error => {
                console.error('Error:', error);
            });


</script>
</body>
</html>